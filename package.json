{
  "name": "vscode-objectscript",
  "displayName": "InterSystems ObjectScript",
  "description": "InterSystems ObjectScript language support for Visual Studio Code",
  "version": "0.8.7-SNAPSHOT",
  "icon": "images/logo.png",
  "aiKey": "7047c4a1-fc13-43ea-a485-01a74ff0b2af",
  "categories": [
    "Programming Languages",
    "Other",
    "Snippets",
    "Debuggers",
    "Formatters"
  ],
  "keywords": [
    "objectscript",
    "intersystems",
    "debug"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/intersystems-community/vscode-objectscript"
  },
  "license": "MIT",
  "preview": true,
  "publisher": "daimor",
  "contributors": [
    {
      "name": "Dmitry Maslennikov",
      "email": "mrdaimor@gmail.com"
    },
    {
      "name": "Nikita Savchenko",
      "email": "me@nikita.tk"
    },
    {
      "name": "Oleg Dmitrovich",
      "email": "doublefint@gmail.com"
    }
  ],
  "engines": {
    "vscode": "^1.41.0"
  },
  "enableProposedApi": true,
  "activationEvents": [
    "onDebug",
    "workspaceContains:*.cls",
    "workspaceContains:*.mac",
    "onCommand:vscode-objectscript.export",
    "onCommand:vscode-objectscript.compile",
    "onCommand:vscode-objectscript.viewOthers",
    "onCommand:vscode-objectscript.previewXml",
    "onCommand:vscode-objectscript.explorer.refresh",
    "onCommand:vscode-objectscript.explorer.openClass",
    "onCommand:vscode-objectscript.explorer.openRoutine",
    "onCommand:vscode-objectscript.compileFolder",
    "onLanguage:objectscript",
    "onLanguage:objectscript-class",
    "onLanguage:objectscript-macros",
    "onLanguage:xml",
    "onView:ObjectScriptExplorer",
    "onFileSystem:isfs",
    "onFileSystem:objectscript",
    "onDebugInitialConfigurations"
  ],
  "main": "./out/extension",
  "contributes": {
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-objectscript.touchBar.compile",
          "when": "false"
        },
        {
          "command": "vscode-objectscript.touchBar.viewOthers",
          "when": "false"
        },
        {
          "command": "vscode-objectscript.compile",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.compileWithFlags",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.compileAll",
          "when": "vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.compileAllWithFlags",
          "when": "vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.viewOthers",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.subclass",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.superclass",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.previewXml",
          "when": "editorLangId = xml && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.explorer.export",
          "when": "vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.explorer.delete",
          "when": "false"
        },
        {
          "command": "vscode-objectscript.explorer.compile",
          "when": "false"
        },
        {
          "command": "vscode-objectscript.explorer.refresh",
          "when": "vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.compileFolder",
          "when": "false"
        },
        {
          "command": "vscode-objectscript.studio.actions",
          "when": "vscode-objectscript.connectActive && resourceScheme == isfs && vscode-objectscript.studioExtensionEnabled"
        }
      ],
      "view/title": [
        {
          "command": "vscode-objectscript.explorer.refresh",
          "when": "view == ObjectScriptExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-objectscript.explorer.export",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^dataNode:/"
        },
        {
          "command": "vscode-objectscript.explorer.export",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^dataRootNode:/"
        },
        {
          "command": "vscode-objectscript.explorer.delete",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^dataNode:/"
        },
        {
          "command": "vscode-objectscript.explorer.compile",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^dataNode:/"
        },
        {
          "command": "vscode-objectscript.studio.contextActions",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^dataNode:/ && vscode-objectscript.studioExtensionEnabled"
        },
        {
          "command": "vscode-objectscript.explorer.otherNamespace",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^serverNode((?!:extra:).)*$/",
          "group": "inline"
        },
        {
          "command": "vscode-objectscript.explorer.otherNamespaceClose",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^serverNode:extra:/",
          "group": "inline"
        },
        {
          "command": "vscode-objectscript.explorer.showGenerated",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^serverNode((?!:generated:).)*$/"
        },
        {
          "command": "vscode-objectscript.explorer.hideGenerated",
          "when": "view == ObjectScriptExplorer && viewItem =~ /^serverNode.*:generated:/"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-objectscript.viewOthers",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.compile",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.studio.actions",
          "when": "resourceScheme == isfs && editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive && vscode-objectscript.studioExtensionEnabled"
        },
        {
          "command": "vscode-objectscript.previewXml",
          "when": "editorLangId =~ /^xml/"
        }
      ],
      "touchBar": [
        {
          "command": "vscode-objectscript.touchBar.compile",
          "group": "objectscript.compile",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.touchBar.viewOthers",
          "group": "objectscript.viewOthers",
          "when": "editorLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        }
      ],
      "explorer/context": [
        {
          "command": "vscode-objectscript.compileFolder",
          "when": "vscode-objectscript.connectActive"
        },
        {
          "command": "vscode-objectscript.studio.actions",
          "when": "resourceScheme == isfs && resourceLangId =~ /^objectscript/ && vscode-objectscript.connectActive"
        }
      ]
    },
    "languages": [
      {
        "id": "objectscript",
        "aliases": [
          "ObjectScript"
        ],
        "extensions": [
          ".mac",
          ".int"
        ]
      },
      {
        "id": "objectscript-class",
        "aliases": [
          "ObjectScript Class"
        ],
        "extensions": [
          ".cls"
        ]
      },
      {
        "id": "objectscript-macros",
        "aliases": [
          "ObjectScript Include"
        ],
        "extensions": [
          ".inc"
        ]
      },
      {
        "id": "objectscript-csp",
        "aliases": [
          "ObjectScript CSP"
        ],
        "extensions": [
          "csp"
        ]
      }
    ],
    "grammars": [
      {
        "language": "objectscript",
        "scopeName": "source.objectscript",
        "path": "syntaxes/objectscript.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.sql": "sql",
          "text.html": "html",
          "text.js": "js"
        }
      },
      {
        "language": "objectscript-class",
        "scopeName": "source.objectscript_class",
        "path": "syntaxes/objectscript-class.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.sql": "sql",
          "meta.embedded.block.objectscript": "objectscript",
          "text.xml": "xml",
          "text.html": "html",
          "text.js": "js"
        }
      },
      {
        "language": "objectscript-macros",
        "scopeName": "source.objectscript_macros",
        "path": "syntaxes/objectscript-macros.tmLanguage.json",
        "embeddedLanguages": {
          "meta.preprocessor.objectscript": "source.objectscript"
        }
      },
      {
        "language": "objectscript-csp",
        "scopeName": "source.objectscript_csp",
        "path": "syntaxes/objectscript-csp.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "objectscript-class",
        "path": "./snippets/objectscript-class.json"
      }
    ],
    "commands": [
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.export",
        "title": "Export sources"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.compile",
        "title": "Import and compile current file"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.previewXml",
        "title": "Preview XML as UDL"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.compileWithFlags",
        "title": "Import and compile current file with specified flags"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.compileAll",
        "title": "Compile all namespace files"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.compileAllWithFlags",
        "title": "Compile all namespace files with specified flags"
      },
      {
        "command": "vscode-objectscript.explorer.export",
        "title": "Export",
        "category": "ObjectScript"
      },
      {
        "command": "vscode-objectscript.explorer.otherNamespace",
        "title": "View another namespace",
        "category": "ObjectScript"
      },
      {
        "command": "vscode-objectscript.explorer.showGenerated",
        "title": "Show generated",
        "category": "ObjectScript"
      },
      {
        "command": "vscode-objectscript.explorer.hideGenerated",
        "title": "Hide generated",
        "category": "ObjectScript"
      },
      {
        "command": "vscode-objectscript.explorer.otherNamespaceClose",
        "title": "Close namespace",
        "category": "ObjectScript"
      },
      {
        "command": "vscode-objectscript.explorer.delete",
        "title": "Delete",
        "category": "ObjectScript"
      },
      {
        "command": "vscode-objectscript.explorer.compile",
        "title": "Compile",
        "category": "ObjectScript"
      },
      {
        "command": "vscode-objectscript.explorer.refresh",
        "title": "Refresh Explorer",
        "category": "ObjectScript",
        "icon": {
          "light": "images/light/refresh.svg",
          "dark": "images/dark/refresh.svg"
        }
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.viewOthers",
        "title": "View other"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.subclass",
        "title": "Go to Subclass..."
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.superclass",
        "title": "Go to Super class..."
      },
      {
        "command": "vscode-objectscript.touchBar.compile",
        "title": "➾¹₀⁰₁¹₀"
      },
      {
        "command": "vscode-objectscript.touchBar.viewOthers",
        "title": "↹"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.serverActions",
        "title": "Show server actions"
      },
      {
        "category": "ObjectScsript",
        "command": "vscode-objectscript.compileFolder",
        "title": "Import and compile"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.studio.actions",
        "title": "Studio actions"
      },
      {
        "category": "ObjectScript",
        "command": "vscode-objectscript.studio.contextActions",
        "title": "Studio context actions"
      }
    ],
    "keybindings": [
      {
        "command": "vscode-objectscript.compile",
        "key": "Ctrl+F7",
        "mac": "Cmd+F7",
        "when": "editorLangId =~ /^objectscript/"
      },
      {
        "command": "vscode-objectscript.compileAll",
        "key": "Ctrl+Shift+F7",
        "mac": "Cmd+Shift+F7",
        "when": "editorLangId =~ /^objectscript/"
      },
      {
        "command": "vscode-objectscript.viewOthers",
        "key": "Ctrl+Shift+V",
        "mac": "Cmd+Shift+V",
        "when": "editorLangId =~ /^objectscript/"
      }
    ],
    "configuration": {
      "title": "InterSystems ObjectScript",
      "type": "object",
      "properties": {
        "objectscript.conn": {
          "type": "object",
          "description": "Server Access",
          "scope": "resource"
        },
        "objectscript.conn.active": {
          "description": "Active",
          "type": "boolean",
          "default": false
        },
        "objectscript.conn.host": {
          "description": "Hostname",
          "format": "hostname",
          "type": "string",
          "default": "localhost"
        },
        "objectscript.conn.port": {
          "description": "Port number",
          "type": "number",
          "default": 52773
        },
        "objectscript.conn.username": {
          "description": "Username",
          "type": "string",
          "default": "_SYSTEM"
        },
        "objectscript.conn.password": {
          "description": "User's Password",
          "type": "string",
          "default": "SYS"
        },
        "objectscript.conn.ns": {
          "description": "Server Namespace",
          "type": "string",
          "default": "USER"
        },
        "objectscript.conn.https": {
          "description": "Use SSL to access to API",
          "type": "boolean",
          "default": false
        },
        "objectscript.conn.docker-compose": {
          "description": "Connect to server running in docker-compose",
          "type": "object",
          "scope": "resource"
        },
        "objectscript.conn.docker-compose.service": {
          "description": "Name of service in docker-compose",
          "type": "string"
        },
        "objectscript.conn.docker-compose.internalPort": {
          "description": "Target port inside the service in docker-compose",
          "type": "number",
          "default": 52773
        },
        "objectscript.conn.docker-compose.file": {
          "description": "docker-compose file",
          "type": "string",
          "default": "docker-compose.yml"
        },
        "objectscript.conn.links": {
          "description": "Extra links for the server",
          "type": "object"
        },
        "objectscript.export": {
          "type": "object",
          "description": "Export only the necessary stuff ",
          "scope": "resource"
        },
        "objectscript.export.folder": {
          "description": "folder for source code",
          "type": "string",
          "default": "src"
        },
        "objectscript.export.addCategory": {
          "description": "add category folder to the export path",
          "type": [
            "boolean",
            "object"
          ],
          "default": false
        },
        "objectscript.export.atelier": {
          "description": "export source code as Atelier it does ( packages to subfolders )",
          "type": "boolean",
          "default": true
        },
        "objectscript.export.generated": {
          "description": "Specifies that generated source code files should be exported",
          "type": "boolean",
          "default": false
        },
        "objectscript.export.filter": {
          "description": "SQL filter that can be used to match the names",
          "type": "string",
          "default": ""
        },
        "objectscript.export.category": {
          "description": "Specifies a category to export: CLS = classes; RTN = routines; CSP = csp files; OTH = other. Default is *",
          "type": [
            "string",
            "object"
          ],
          "default": "*"
        },
        "objectscript.showExplorer": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the Explorer."
        },
        "objectscript.compileFlags": {
          "type": "string",
          "default": "cuk",
          "description": "Compilation flags."
        },
        "objectscript.autoPreviewXML": {
          "type": "boolean",
          "default": false,
          "description": "Automatically Preview XML Export files as UDL"
        },
        "objectscript.export.noStorage": {
          "description": "Strip the storage xml on export.  (Useful for multiple systems)",
          "type": "boolean",
          "default": false
        },
        "objectscript.export.dontExportIfNoChanges": {
          "description": "Don't update the local file on export if the content is identical to the server code",
          "type": "boolean",
          "default": false
        },
        "objectscript.export.maxConcurrentConnections": {
          "description": "Max Export Connections (0 = Unlimited)",
          "type": "number",
          "default": 0
        },
        "objectscript.format": {
          "type": "object",
          "description": "Formatting settings"
        },
        "objectscript.format.commandCase": {
          "anyOf": [
            "word",
            "upper",
            "lower"
          ],
          "default": "word",
          "description": "Case for commands"
        },
        "objectscript.format.functionCase": {
          "anyOf": [
            "word",
            "upper",
            "lower"
          ],
          "default": "word",
          "description": "Case for system functions/variables"
        },
        "objectscript.suppressCompileMessages": {
          "default": true,
          "type": "boolean",
          "description": "Suppress popup messages about successful compile"
        },
        "objectscript.suppressCompileErrorMessages": {
          "default": false,
          "type": "boolean",
          "description": "Suppress popup messages about errors during compile, but keep focus on Output view"
        },
        "objectscript.serverSideEditing": {
          "default": false,
          "type": "boolean",
          "description": "Allow to edit code directly on server"
        },
        "objectscript.debug": {
          "type": "object"
        },
        "objectscript.debug.debugThisMethod": {
          "type": "boolean",
          "default": true,
          "description": "Show `Debug this method` action for ClassMethods"
        },
        "objectscript.studioActionDebugOutput": {
          "type": "boolean",
          "default": false,
          "description": "Output the action that VSCode should perform as requested by the server in JSON format."
        }
      }
    },
    "views": {
      "ObjectScriptView": [
        {
          "id": "ObjectScriptExplorer",
          "name": "Explorer",
          "when": "workspaceFolderCount != 0 && config.objectscript.showExplorer == true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "images/InterSystems.svg",
          "id": "ObjectScriptView",
          "title": "ObjectScript"
        }
      ]
    },
    "breakpoints": [
      {
        "language": "objectscript"
      },
      {
        "language": "objectscript-class"
      }
    ],
    "debuggers": [
      {
        "type": "objectscript",
        "label": "ObjectScript Debug",
        "program": "./out/debug/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "program": {
                "type": "string",
                "description": "Class or routine to debug."
              }
            }
          },
          "attach": {
            "required": [],
            "properties": {
              "processId": {
                "type": [
                  "number",
                  "string"
                ],
                "description": "ID of process to attach to.",
                "default": "${command:PickProcess}"
              },
              "system": {
                "type": "boolean",
                "description": "Enable to attach to system process.",
                "default": false
              }
            }
          }
        },
        "variables": {
          "PickProcess": "vscode-objectscript.pickProcess"
        },
        "initialConfigurations": [
          {
            "type": "objectscript",
            "request": "launch",
            "name": "XDebug"
          }
        ],
        "configurationSnippets": [
          {
            "label": "ObjectScript Debug: Run current routine",
            "description": "A new configuration for 'debugging' a user selected ObjectScript routine.",
            "body": {
              "type": "objectscript",
              "request": "launch",
              "name": "ObjectScript Run current routine",
              "program": "^\"\\${file}\""
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "package": "vsce package",
    "compile": "tsc -p ./",
    "watch": "tsc -w -p ./tsconfig.json",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js",
    "lint": "node ./node_modules/tslint/bin/tslint --project tsconfig.json -t verbose",
    "lint-fix": "tslint --project tsconfig.json -t verbose --fix"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.12.26",
    "@types/request": "^2.48.4",
    "@types/request-promise": "^4.1.45",
    "@types/vscode": "^1.41.0",
    "@types/ws": "^6.0.4",
    "@types/xmldom": "^0.1.29",
    "@typescript-eslint/eslint-plugin": "^2.19.0",
    "@typescript-eslint/parser": "^2.19.0",
    "eslint": "^6.8.0",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-config-prettier": "^6.10.0",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-node": "^10.0.0",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-promise": "^4.2.1",
    "extend": "^3.0.2",
    "minimist": ">=1.2.2",
    "mocha": "^6.2.2",
    "prettier": "^1.19.1",
    "tape": "^4.13.0",
    "typescript": "^3.7.5",
    "vsce": "^1.73.0",
    "vscode-debugadapter-testsupport": "^1.40.1",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "await-notify": "^1.0.1",
    "glob": "^7.1.6",
    "iconv-lite": "^0.5.1",
    "mkdirp": "^1.0.3",
    "request": "^2.88.0",
    "request-promise": "^4.2.5",
    "vscode-cache": "^0.3.0",
    "vscode-debugadapter": "^1.39.1",
    "vscode-debugprotocol": "^1.39.0",
    "vscode-extension-telemetry": "^0.1.2",
    "ws": "^7.2.1",
    "xmldom": "^0.1.31"
  }
}
